{
    "componentChunkName": "component---src-templates-lesson-template-js",
    "path": "/interacting-with-the-ui",
    "result": {"data":{"markdownRemark":{"html":"<p>We have two distinct sorts of logic that we want to keep separated from each other: UI logic (button clicks, hover events, DOM stuff, etc.) and business logic (the clock, the state machine, all the actual logic behind the game.) In this part, we're going to do the UI logic and then we'll add a way for the UI to call into the business logic.</p>\n<p>Add a new file called button.js.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">ICONS</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./constants\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleHighlighted</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">icon<span class=\"token punctuation\">,</span> show</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  document\n    <span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">ICONS</span><span class=\"token punctuation\">[</span>icon<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-icon</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"highlighted\"</span><span class=\"token punctuation\">,</span> show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">initButtons</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">handleUserAction</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> selectedIcon <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">buttonClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> target <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"left-btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">toggleHighlighted</span><span class=\"token punctuation\">(</span>selectedIcon<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      selectedIcon <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> selectedIcon<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token constant\">ICONS</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">toggleHighlighted</span><span class=\"token punctuation\">(</span>selectedIcon<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right-btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">toggleHighlighted</span><span class=\"token punctuation\">(</span>selectedIcon<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      selectedIcon <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> selectedIcon<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token constant\">ICONS</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">toggleHighlighted</span><span class=\"token punctuation\">(</span>selectedIcon<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">handleUserAction</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ICONS</span><span class=\"token punctuation\">[</span>selectedIcon<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".buttons\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> buttonClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pretty dumb UI plumbing here. We're being a bit clever with the toggleHighlighted by using a ternary but I'm fine with this. It's a one liner function that I don't think is too much served by being any more verbose than this. However I wouldn't put this in the middle of a function.</p>\n<p>This is using the modulo (<code class=\"language-text\">%</code>) operator to wrap the button pushes. If some one clicks left on the first button, it wraps to the last button. I use the +2 and +1 because that fits my brain better but you could use subtraction as well.</p>\n<p>Let's go make that very brief constants.js file.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">ICONS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"fish\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"poop\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">TICK_RATE</span> <span class=\"token operator\">=</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now we can have one source of truth for our constants. We're also moving <code class=\"language-text\">TICK_RATE</code> here so it's easy to modify later if we choose to.</p>\n<p>Let's go init our buttons.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// at top</span>\n<span class=\"token keyword\">import</span> initButtons <span class=\"token keyword\">from</span> <span class=\"token string\">\"./buttons\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// replace TICK_RATE</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">TICK_RATE</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./constants\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// first line of init()</span>\n<span class=\"token function\">initButtons</span><span class=\"token punctuation\">(</span>game<span class=\"token punctuation\">.</span>handleUserAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And lastly, let's put in a placeholder for the <code class=\"language-text\">handleUserAction</code> in gameState.js</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// last function in gameState</span>\n<span class=\"token function\">handleUserAction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">icon</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>icon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>This should be all plumbed up now. Head over to your game and try playing around with the buttons! It should log out when you click the middle button and the button highlights should work correctly.</p>\n<p><a href=\"https://github.com/btholt/project-files-for-fox-game/tree/master/ui-interaction\">We've reached the ui-interaction milestone</a>.</p>","frontmatter":{"path":"/interacting-with-the-ui","title":"Interacting with the UI","order":"4B","section":"The Game","description":"The Project"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"2B","path":"/build-process","title":"Build Process"}}},{"node":{"frontmatter":{"order":"2D","path":"/code-formatting","title":"Code Formatting"}}},{"node":{"frontmatter":{"order":"2C","path":"/code-style","title":"Code Style"}}},{"node":{"frontmatter":{"order":"5A","path":"/conclusion","title":"Wrapping Up"}}},{"node":{"frontmatter":{"order":"4G","path":"/death","title":"Death"}}},{"node":{"frontmatter":{"order":"2E","path":"/editor-setup","title":"Editor Setup"}}},{"node":{"frontmatter":{"order":"2A","path":"/hello-world","title":"Hello World"}}},{"node":{"frontmatter":{"order":"3B","path":"/init","title":"Init the Project"}}},{"node":{"frontmatter":{"order":"4B","path":"/interacting-with-the-ui","title":"Interacting with the UI"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"2F","path":"/linting","title":"Linting"}}},{"node":{"frontmatter":{"order":"3A","path":"/organization","title":"Organizing Your Code"}}},{"node":{"frontmatter":{"order":"4E","path":"/pooping","title":"Pooping"}}},{"node":{"frontmatter":{"order":"4A","path":"/some-ui","title":"Some UI"}}},{"node":{"frontmatter":{"order":"3C","path":"/state-machine","title":"State Machine"}}},{"node":{"frontmatter":{"order":"2G","path":"/testing","title":"Testing"}}},{"node":{"frontmatter":{"order":"4D","path":"/transitioning-between-states","title":"Transitioning Between States"}}},{"node":{"frontmatter":{"order":"2H","path":"/type-checking","title":"Type Checking"}}},{"node":{"frontmatter":{"order":"4C","path":"/the-states","title":"The States"}}},{"node":{"frontmatter":{"order":"1B","path":"/the-project","title":"The Project"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["2959687377"]}