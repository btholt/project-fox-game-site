{"componentChunkName":"component---src-templates-lesson-template-js","path":"/build-process","result":{"data":{"markdownRemark":{"html":"<p>We need to first decide how we're going to structure the project. The whole game could conceivably all fit in one file and that wouldn't be the end of the world. Not recommended, but not the worst.</p>\n<p>We then need to split up the game into multiple files. In order to do that, we need some sort of strategy to bundle our app. Until quite recently, browsers didn't know how to eloquently handle multiple files being downloaded for a project. We could have made multiple JS files and put multiple <code class=\"language-text\">&lt;script></code> tags on the page but that's a pretty brittle and unfun way of doing it.</p>\n<p>Recently browsers shipped the ability to module loading. It's support is <a href=\"https://caniuse.com/#feat=es6-module\">okay and getting better</a>. But this isn't really useful yet because it needs wider adoption. Let's use a JavaScript bundler.</p>\n<h2 id=\"bundler-choices\" style=\"position:relative;\"><a href=\"#bundler-choices\" aria-label=\"bundler choices permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bundler Choices</h2>\n<p>The default choice for most people in this case would be [Webpack][webpack] and that is a great choice. It it most certainly a tool fit for this job and has extremely wide adoption across top tech companies, Microsoft included. Setting it up can be a bit of a headache but I have few complaints beyond that.</p>\n<p>Another wonderful and still-going project that often gets overlooked is <a href=\"http://browserify.org/\">Browserify</a>. It's older than Webpack and was certainly the gold standard before Webpack. The project is considered \"done\" so they don't add many new features to it but it is still actively maintained.</p>\n<p>Some other ones you may want to check into would be <a href=\"https://www.snowpack.dev/\">Snowpack</a>, <a href=\"https://rollupjs.org/guide/en/\">Rollup</a>, and <a href=\"https://github.com/developit/microbundle\">microbundle</a> (powered by Rollup.) All have their own interesting merits, wrinkles, and drawbacks.</p>\n<h2 id=\"parcel\" style=\"position:relative;\"><a href=\"#parcel\" aria-label=\"parcel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parcel</h2>\n<p>We're going to roll with <a href=\"https://parceljs.org/\">Parcel</a>. If you're not familiar with Parcel you're in for a treat. It takes zero configuration to get up and running with Parcel. You just point it at the entry point to your app (normally an <code class=\"language-text\">index.html</code>) and it just figures out the rest and does a great job. So let's get it rolling.</p>\n<h2 id=\"get-started-with-parcel\" style=\"position:relative;\"><a href=\"#get-started-with-parcel\" aria-label=\"get started with parcel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get Started with Parcel</h2>\n<p>Run <code class=\"language-text\">npm install -D parcel-bundler</code>.</p>\n<p>Create a <code class=\"language-text\">src</code> directory in your project. This is more of a habit for me: I always put code into a <code class=\"language-text\">src</code> directory. It needs to go somewhere, might as well go there.</p>\n<p>Inside the <code class=\"language-text\">src</code> directory, make a file named <code class=\"language-text\">index.html</code>. In that HTML file, put:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Fox Project<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Hello World!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Just a bare bones HTML file. In your <code class=\"language-text\">package.json</code>, there's a property called <code class=\"language-text\">scripts</code>. In <code class=\"language-text\">scripts</code>, add a new line <code class=\"language-text\">\"dev\": \"parcel src/index.html\"</code>. This will start a dev server any time you run <code class=\"language-text\">npm run dev</code> that will run Parcel with <code class=\"language-text\">src/index.html</code> as the entry point. Try it! Head to your command and run <code class=\"language-text\">npm run dev</code>. Then head to <a href=\"http://localhost:1234\">http://localhost:1234</a> to see your beautiful new project! You should see your HTML you just created being served.</p>\n<p>Pretty easy to get up and running, huh?</p>\n<p>Last thing, we need to ignore in Git two new directories which Parcel creates. Your <code class=\"language-text\">.gitignore</code> will look like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_modules/\n.cache/\ndist/</code></pre></div>\n<p>This is so we don't commit derived or cache files to your codebase: you only want to store source code, the source of truth, in your code. Everything else can be built whenever.</p>\n<p><a href=\"https://github.com/btholt/project-files-for-fox-game/tree/master/build-process\">We've now arrived to the build-process milestone</a>.</p>","frontmatter":{"path":"/build-process","title":"Build Process","order":"2B","section":"Frontend Infra","description":"The Project"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"2B","path":"/build-process","title":"Build Process"}}},{"node":{"frontmatter":{"order":"2D","path":"/code-formatting","title":"Code Formatting"}}},{"node":{"frontmatter":{"order":"2C","path":"/code-style","title":"Code Style"}}},{"node":{"frontmatter":{"order":"5A","path":"/conclusion","title":"Wrapping Up"}}},{"node":{"frontmatter":{"order":"4G","path":"/death","title":"Death"}}},{"node":{"frontmatter":{"order":"2E","path":"/editor-setup","title":"Editor Setup"}}},{"node":{"frontmatter":{"order":"2A","path":"/hello-world","title":"Hello World"}}},{"node":{"frontmatter":{"order":"3B","path":"/init","title":"Init the Project"}}},{"node":{"frontmatter":{"order":"4B","path":"/interacting-with-the-ui","title":"Interacting with the UI"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"2F","path":"/linting","title":"Linting"}}},{"node":{"frontmatter":{"order":"3A","path":"/organization","title":"Organizing Your Code"}}},{"node":{"frontmatter":{"order":"4E","path":"/pooping","title":"Pooping"}}},{"node":{"frontmatter":{"order":"4A","path":"/some-ui","title":"Some UI"}}},{"node":{"frontmatter":{"order":"3C","path":"/state-machine","title":"State Machine"}}},{"node":{"frontmatter":{"order":"2G","path":"/testing","title":"Testing"}}},{"node":{"frontmatter":{"order":"1B","path":"/the-project","title":"The Project"}}},{"node":{"frontmatter":{"order":"4C","path":"/the-states","title":"The States"}}},{"node":{"frontmatter":{"order":"4D","path":"/transitioning-between-states","title":"Transitioning Between States"}}},{"node":{"frontmatter":{"order":"2H","path":"/type-checking","title":"Type Checking"}}}]}},"pageContext":{}},"staticQueryHashes":["2959687377"]}